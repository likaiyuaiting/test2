#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>
#include<string.h>
#define MAXSIZE 100

//
typedef struct Student
{
	int score;
	char sno[5], sname[9];
}Student;

//
typedef struct
{
	int last;
	Student date[MAXSIZE];
}SeqList;

//
Student *inputdate()
{
	Student s1, *s = &s1;
	char sno[5];
	printf("\n请输入学生学号（不超过4位）：");
	scanf("%d",sno);
	if (sno[0] == '#') 
		return NULL;
	strcpy(s->sno,sno);
	printf("\n请输入姓名（不超过4个汉字）：");
	scanf("%s",s->sname);
	printf("\n请输入成绩（int型）：");
	scanf("%d", s->score);
	return s;
}

//
SeqList *initSeq()
{
	SeqList LL, *LL1 = &LL;
	Student *s;
	LL1->last = -1;
	printf("\n请输入学生信息，当前学号no为/'#'时结束：\n\n");
	while (1)
	{
		s = inputdate();
		if (!s)
			break;
		LL1->last = LL1->last + 1;
		LL1->date[LL1->last] = *s;
	}
	return LL1;
}

//
void display(SeqList *L,int i)
{
	printf("\n\n\n学号\t\t姓名\t\t成绩：");
	printf("\n%s\t\t",L->date[i].sno);
	printf("%s\t\t",L->date[i].sname);
	printf("%d\t\t",L->date[i].score);
}

//
void displayAll(SeqList *L)
{
	int i = 0, n = L->last;
	printf("\n\n\n学号\t\t姓名\t\t成绩：");
	while (i <= n)
	{
		printf("\n%s\t\t", L->date[i].sno);
		printf("%s\t\t", L->date[i].sname);
		printf("%d\t\t", L->date[i].score);
		i++;
	}
}

//
int lengthList(SeqList *L)
{
	return L->last + 1;
}

//
void locateElemByplace(SeqList *L, int j)
{
	display(L, j - 1);
}

//
void locateElem(SeqList *L, char ch[5])
{
	int i;
	for (i = 0; i < L->last;i++)
	if (strcmp(L->date[i].sno, ch) == 0)
	{
		display(L, i);
		break;
	}
}

//
int insertElem(SeqList *L, int i)
{
	int j, k;
	Student *s;
	k = L->last;
	if (L->last == MAXSIZE - 1)
	{
		printf("\n---------overflow---------\n");
		return 0;
	}
	if ((i<1) || (i>L->last + 2))
	{
		printf("\n---the insert place is error!!!---\n");
		return 0;
	}
	for (j = k; j >= i - 1; j--)
		L->date[j + 1] = L->date[j];
	s = inputdate();
	L->last = L->last + 1;
	L->date[i - 1] = *s;
	return 1;
}

//
int deleteElem(SeqList *L, int i)
{
	int j;
	if (i<1 || i>L->last + 1)
	{
		printf("不存在第%d个元素",i);
		return 0;
	}
	for (j = i; j <= L->last; j++)
		L->date[j-1] = L->date[j];
	L->last = L->last - 1;
	return 1;
}

//
void insertSortl(SeqList *L)
{
	SeqList *L1 = (SeqList *)malloc(sizeof(SeqList));
	Student temp;
	int i, j, len = L->last;
	for (i = 0; i <= len; i++)
	{
		L1->date[i] = L->date[i];
	}
	L1->last = L->last;
	for (i = 0; i <= len; i++)
	{
		if (L1->date[i].score > L1->date[i - 1].score)
		{
			temp.score = L1->date[i].score;
			strcpy(temp.sname , L1->date[i].sname);
			strcpy(temp.sno , L1->date[i].sno);
			L1->date[i] = L1->date[i - 1];
			for (j = i - 2; (temp.score > L1->date[j].score) && (j >= 0); j--)
			{
				L1->date[j + 1] = L1->date[j];
			}
			L1->date[j + 1].score = temp.score;
			strcpy(temp.sname, L1->date[i].sname);
			strcpy(temp.sno, L1->date[i].sno);
		}
	}
	printf("\n\n\t\t排序后的成绩如下：\n\n");
	displayAll(L1);
}

int main(void)
{
	SeqList *L;
	char ch[5];
	int i, res, a, b = 1;
	printf("========================================");
	printf("    顺序表结构的学生成绩管理系统\n\n");
	printf("========================================");
	while (b)
	{
		printf("\n\n");
		printf("<1> 创建    <2>指定位置前插入   <3>按位置删除\n");
		printf("<4>求学生总数    <5>按学号查找  <6>按位置查找\n");
		printf("<7>显示所有学生  <8>成绩排序  <9>退出\n");
		printf("\n请输入功能选项：");
		scanf("%d",&a);
		break;

	}
	system("pause");
	return 0;
}
